GitLab with Git Basics Hands On Guide: Lab 6

LAB 6: Static Application Security Testing (SAST)
SAST, an optional feature of CI/CD pipelines, analyzes your source code for known vulnerabilities. On every commit to a SAST-enabled project, 

GitLab checks the SAST report and compares the found vulnerabilities between the source and target branches.

The purpose of this lab is to use SAST to identify potential security vulnerabilities in your code.
Navigate to the CI Test Project
Open your CI Test project and click on the .gitlab-ci.yml file.
Click on Web IDE to edit the file.
Pull up this docs page in another tab to assist you with this lab. This page displays instructions for including SAST in CI/CD pipelines. The page also lists the languages and frameworks that SAST supports.
On the docs page, scroll down to the Configure SAST manually section.

Copy the following line:
include:
  - template: Security/SAST.gitlab-ci.yml
  
Navigate back to the Web IDE where you were editing .gitlab-ci.yml.
Paste the code just copied below the test1 section, leaving a blank line between the blocks of code.
Ensure the first line of the pasted code is flush-left, and the second line is indented.

Click the blue Commitâ€¦ button.
Add a commit message: Add SAST to pipeline
Click Commit to master branch instead of creating a new branch.
Click Commit. Now that you have committed this change, the pipeline will run.
Next, let's add a file with a known vulnerability and see if SAST detects it.

Add a main.go file and view SAST results
