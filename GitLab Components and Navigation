GitLab Epics    

Epics let you manage your portfolio of projects more efficiently and with less effort by tracking groups of issues that share a theme, across projects and milestones.

Epics allow you to group related issues and epics together. This is useful if you want better visibility of related issues. 
For example, you might want to see all of the issues in a project in a roadmap and generate a Gantt chart for your program or portfolio.

There are a ton of ways GitLab epics can be used at GitLab. Take a look at the GitLab Docs topic below to learn more.

GitLab Docs
User Docs
Groups
Epics
On this page
Use cases
Manage epics
Relationships between epics and issues
Issue health status in Epic tree
Multi-level child epics
Start date and due date
Inherited
Roadmap in epics
Permissions
Thread
Comment or start a thread
Activity sort order
Award emoji
Notifications
Help and feedback
Epics PREMIUM
Version history
Epics let you manage your portfolio of projects more efficiently by tracking groups of issues that share a theme across projects and milestones.

An epic’s page contains the following tabs:

Issues: issues added to this epic.
Epics and Issues: epics and issues added to this epic. Appears instead of the Issues tab if you have access to multi-level epics. Child epics and their issues are shown in a tree view.

To reveal the child epics and issues, select the chevron (>) next to a parent epic.
To see a breakdown of open and closed items, hover over the total counts.

The number provided here includes all epics associated with this project. The number includes epics for which users may not yet have permission.

Roadmap: a roadmap view of child epics which have start and due dates. Appears if you have access to multi-level epics.
epic view

Use cases
Suppose your team is working on a large feature that involves multiple discussions throughout different issues created in distinct projects within a Group. With Epics, you can track all the related activities that together contribute to that single feature.
Track when the work for the group of issues is targeted to begin, and when it’s targeted to end.
Discuss and collaborate on feature ideas and scope at a high level.
Manage epics
To learn what you can do with an epic, see Manage epics. Possible actions include:

Create an epic
Edit an epic
Bulk-edit epics
Delete an epic
Close an epic
Reopen a closed epic
Go to an epic from an issue
Search for an epic from epics list page
Make an epic confidential
Manage issues assigned to an epic
Manage multi-level child epics 
Relationships between epics and issues
The possible relationships between epics and issues are:

An epic is the parent of one or more issues.
An epic is the parent of one or more child epics. For details see Multi-level child epics. 
Parent_epic
Issue1
Child_epic
Issue2
See Manage issues assigned to an epic for steps to:

Add an issue to an epic
Reorder issues
Move an issue between epics
Promote an issue to an epic
Issue health status in Epic tree ULTIMATE
Version history
Report or respond to the health of issues and epics by setting a red, amber, or green health status, which then appears on your Epic tree.

Multi-level child epics ULTIMATE
Introduced in GitLab Ultimate 11.7.

You can add any epic that belongs to a group or subgroup of the parent epic’s group. New child epics appear at the top of the list of epics in the Epics and Issues tab.

When you add an epic that’s already linked to a parent epic, the link to its current parent is removed.

Epics can contain multiple nested child epics, up to a total of seven levels deep.

See Manage multi-level child epics for steps to create, move, reorder, or delete child epics.

Start date and due date
To set a Start date and Due date for an epic, select one of the following:

Fixed: enter a fixed value.
Inherited: inherit a dynamic value from the epic’s issues, child epics, and milestones.
Inherited
Introduced in GitLab 12.5 to replace From milestones.

If you select Inherited:

For the start date: GitLab scans all child epics and issues assigned to the epic, and sets the start date to match the earliest found start date or milestone.
For the due date: GitLab sets the due date to match the latest due date or milestone found among its child epics and issues.
These are dynamic dates and recalculated if any of the following occur:

A child epic’s dates change.
Milestones are reassigned to an issue.
A milestone’s dates change.
Issues are added to, or removed from, the epic.
Because the epic’s dates can inherit dates from its children, the start date and due date propagate from the bottom to the top. If the start date of a child epic on the lowest level changes, that becomes the earliest possible start date for its parent epic. The parent epic’s start date then reflects this change and propagates upwards to the top epic.

Roadmap in epics ULTIMATE
Introduced in GitLab Ultimate 11.10.

If your epic contains one or more child epics which have a start or due date, a roadmap view of the child epics is listed under the parent epic.

Child epics roadmap

Permissions
If you have access to view an epic and an issue added to that epic, you can view the issue in the epic’s issue list.

If you have access to edit an epic and an issue added to that epic, you can add the issue to or remove it from the epic.

Note that for a given group, the visibility of all projects must be the same as the group, or less restrictive. That means if you have access to a group’s epic, then you already have access to its projects’ issues.

You can also consult the group permissions table.

Thread
Comments: collaborate on that epic by posting comments in its thread. These text fields also fully support GitLab Flavored Markdown.
Comment or start a thread
Once you write your comment, you can either:

Click Comment to publish your comment.
Click Start thread to start a thread within that epic’s discussion.
Activity sort order
Introduced in GitLab Premium 13.2.

You can reverse the default order and interact with the activity feed sorted by most recent items at the top. Your preference is saved via local storage and automatically applied to every issue you view.

To change the activity sort order, click the Oldest first dropdown menu and select either oldest or newest items to be shown first.

Issue activity sort order dropdown button

Award emoji
You can award an emoji to that epic or its comments.

Notifications
You can turn on notifications to be alerted about epic events.

 Help & feedback
Docs
Edit this page to fix an error or add an improvement in a merge request.
Create an issue to suggest an improvement to this page.
Show and post comments to review and give feedback about this page.
Product
Create an issue if there's something you don't like about this feature.
Propose functionality by submitting a feature request.
Join First Look to help shape new features.
Feature availability and product trials
View pricing to see all GitLab tiers and features, or to upgrade.
Try GitLab for free with access to all features for 30 days.
Get Help
If you didn't find what you were looking for, search the docs.
If you want help with something specific and could use community support, post on the GitLab forum.
For problems setting up or using this feature (depending on your GitLab subscription).
The Starting Point for Your GitLab WorkFlow 


Issues are the basic building blocks of planning development work and are used to collaborate on ideas and planning work in GitLab. 

You should create a new issue whenever you are developing a new feature to be implemented in one of your applications. You can also create issues for:

Discussing the implementation of a new idea
Managing an incident
Asking questions 
Reporting bugs
At GitLab our best practice is to always start a discussion with an issue.

CONTINUE
