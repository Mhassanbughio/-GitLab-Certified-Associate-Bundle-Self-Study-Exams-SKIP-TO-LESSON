GitLab with Git Basics Hands On Guide: Lab 5

LAB 5: AUTO DEVOPS WITH A PREDEFINED PROJECT TEMPLATE

Create a new Node JS Express project with Auto DevOps
Just like with previous labs, navigate to your group and click New project. Click Create from template and 
then click Use template next to NodeJS Express.
In the Project name field, enter Auto DevOps-test. Make sure the Visiblity Level is Private. Click Create project.

Auto DevOps is an alternative to crafting your own .gitlab-ci.yml file. Note the banner at the top of the window alerting us that Auto DevOps is running in the background.
In the left pane, click Pipelines in the CI/CD section. Note there are no pipelines running.
The most common way to run a pipeline is simply to make a commit to any branch of your project's repository, so let's do that next.
In the left pane, click Branches in the Repository section. Click the green New branch button.
In the Branch name field, enter new-feature. Click Create branch.
In the left pane, click Pipelines in the CI/CD section. Note that there is now a pipeline running, and that it has the Auto DevOps label.
Click running and note the 6 stages that Auto DevOps has created.
Commit a change in order to trigger a pipeline run
In the left pane, click Repository.
Switch to the new-feature branch by selecting it in the dropdown that currently says master near the top left of the window.
To edit a file on this branch, click Web IDE near the top right of the window.
Click views > index.pug.
Click the blue Edit button and then modify the last line of index.pug to: p GitLab welcomes you to #{title} 
Note: be sure to include the p at the beginning of the line.
In the Commit message field, type Update welcome message in index.pug. Click Commit changes.
Click the blue Create merge request button.
Assign the merge request to yourself.
Add Draft:to the beginning of the text in the Title field to show that it isn't ready to be merged yet.
Leave all other fields at their default values and click Submit merge request at the bottom of the page. 
You now have an active merge request for merging the new-feature branch into the master branch.
The page you are on shows the details of that merge request, including the status of the last pipeline
that was run on the new-feature branch (sometimes you have to refresh the page to see the pipeline's status).
GitLab will run a new pipeline every time you commit to the new-feature branch.
Toward the end of the Auto DevOps pipeline, it will deploy your NodeJS Express application into a review environment named after the branch: review/new-feature.
You can see the Docker container that the Auto DevOps pipeline created when it was deploying your application to the review environment:
in the left pane, click Container Registry in the Packages & Registries section.
Suggestions?
